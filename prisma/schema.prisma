// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// companies
model Company {
  id       Int        @id @default(autoincrement())
  name     String     @unique
  Rooms    Room[]
  Employee Employee[]
}

model Employee {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  company   Company   @relation(fields: [companyId], references: [id])
  Bookings  Booking[]
  companyId Int
  admin     Boolean
  guest     Boolean   
  currentRating   Int
  ratingsReceived Int
}

// model the structure of the office
model Room {
  id        Int     @id @default(autoincrement())
  name      String
  desks     Desk[]
  Company   Company @relation(fields: [companyId], references: [id])
  companyId Int
}

model Desk {
  id          Int        @id @default(autoincrement())
  facilities  Facility[]
  Room        Room       @relation(fields: [roomId], references: [id])
  roomId      Int
  Bookings    Booking[]
  LocationRow Int
  LocationCol Int
}

model Facility {
  id     Int    @id @default(autoincrement())
  name   String //this can be enum later
  count  Int
  Desk   Desk   @relation(fields: [deskId], references: [id])
  deskId Int
}

// models related to bookings

model Booking {
  id         Int      @id @default(autoincrement())
  Desk       Desk     @relation(fields: [deskId], references: [id])
  deskId     Int
  createdAt  DateTime @default(now())
  startsAt   DateTime
  endsAt     DateTime
  Employee   Employee @relation(fields: [employeeId], references: [id])
  employeeId Int
}
